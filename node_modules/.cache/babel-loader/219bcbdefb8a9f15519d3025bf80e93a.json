{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/app/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Column from '../Column';\nimport CreateCardsPopup from '../CreateCardsPopup';\nimport CardPopup from '../CardPopup';\nimport NamePopup from '../NamePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let dataName;\n\n  if (localStorage.getItem('name') != null) {\n    const nameStr = localStorage.getItem('name');\n    dataName = JSON.parse(nameStr);\n  } else {\n    dataName = [{\n      status: true,\n      name: ' '\n    }];\n  }\n\n  let dataCards;\n\n  if (localStorage.getItem('cards') != null) {\n    const cardsStr = localStorage.getItem('cards');\n    dataCards = JSON.parse(cardsStr);\n  } else {\n    dataCards = [{\n      theme: 'Lorem Ipsum',\n      author: 'Andre',\n      text: 'Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века.',\n      checked: false,\n      columnID: 1,\n      id: 1\n    }];\n  }\n\n  let dataColumn;\n\n  if (localStorage.getItem('column') != null) {\n    const columnStr = localStorage.getItem('column');\n    dataColumn = JSON.parse(columnStr);\n  } else {\n    dataColumn = [{\n      nameColumn: 'ToDoo',\n      indexColumn: 1,\n      changeColumn: false\n    }, {\n      nameColumn: 'In Progress',\n      indexColumn: 2,\n      changeColumn: false\n    }, {\n      nameColumn: 'Testing',\n      indexColumn: 3,\n      changeColumn: false\n    }, {\n      nameColumn: 'Done',\n      indexColumn: 4,\n      changeColumn: false\n    }];\n  }\n\n  let dataComments;\n\n  if (localStorage.getItem('comments') != null) {\n    const commentStr = localStorage.getItem('comments');\n    dataComments = JSON.parse(commentStr);\n  } else {\n    dataComments = [{\n      idComents: 1,\n      idCards: 1,\n      authorComents: 'Andre',\n      coment: 'Многие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так.'\n    }];\n  }\n\n  const [cards, setCards] = useState(dataCards);\n  const [comments, setComments] = useState(dataComments);\n  const [column, setColumn] = useState(dataColumn);\n  const [name, setName] = useState(dataName);\n  dataColumn = column;\n  dataCards = cards;\n  dataComments = comments;\n  dataName = name;\n  const [createActive, setCreateActive] = useState([{\n    status: false,\n    createIndex: 0\n  }]);\n  const [popupCard, setPopupCard] = useState([{\n    status: false,\n    cardIndex: 0\n  }]);\n  const [escLisner, setEscLisner] = useState(true);\n  const [switchs, setSwitchs] = useState(false);\n  const [chengeTheme, setChengeTheme] = useState(false);\n  const [chengeText, setChengeText] = useState(false);\n\n  function addCard(theme, text, columnID) {\n    const array = dataCards;\n    const idMax = [0];\n\n    if (array != []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].id > idMax[0]) {\n          idMax[0] = array[i].id;\n        }\n      }\n    }\n\n    const newItem = {\n      theme: theme,\n      author: name[0].name,\n      text: text,\n      checked: false,\n      columnID: columnID,\n      id: idMax[0] + 1\n    };\n    const newCards = [newItem, ...dataCards];\n    localStorage.setItem('cards', JSON.stringify(newCards));\n    setCards(newCards);\n    setSwitchs(!switchs);\n  }\n\n  function addComments(comment, idCards) {\n    const array = dataComments;\n    const idMax = [0];\n\n    if (array !== []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].idComents > idMax[0]) {\n          idMax[0] = array[i].idComents;\n        }\n      }\n    }\n\n    const newItem = {\n      idComents: idMax[0] + 1,\n      idCards: idCards,\n      authorComents: name[0].name,\n      coment: comment\n    };\n    const newComments = [newItem, ...dataComments];\n    localStorage.setItem('comments', JSON.stringify(newComments));\n    setComments(newComments);\n  }\n\n  function onDelete(id) {\n    const deletId = cards.findIndex(elem => elem.id === id);\n    const before = cards.slice(0, deletId);\n    const after = cards.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    const clearComments = [];\n\n    if (dataComments !== []) {\n      dataComments.map(item => {\n        if (item.idCards !== id) {\n          clearComments.push(item);\n        }\n      });\n      localStorage.setItem('comments', JSON.stringify(newArr));\n      setComments(clearComments);\n    }\n\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n\n  function onToggleChecked(id) {\n    const index = cards.findIndex(elem => elem.id === id);\n    const old = cards[index];\n    const newItem = { ...old,\n      checked: !old.checked\n    };\n    const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n\n  function onDeleteCommets(id) {\n    const deletId = comments.findIndex(elem => elem.idComents === id);\n    const before = comments.slice(0, deletId);\n    const after = comments.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    localStorage.setItem('comments', JSON.stringify(newArr));\n    setComments(newArr);\n  }\n\n  function newNameColumn(name, id) {\n    if (name !== '') {\n      const index = column.findIndex(elem => elem.indexColumn === id);\n      const old = column[index];\n      const newItem = { ...old,\n        nameColumn: name,\n        changeColumn: false\n      };\n      const newArr = [...column.slice(0, index), newItem, ...column.slice(index + 1)];\n      dataColumn = newArr;\n      setColumn(dataColumn);\n      localStorage.setItem('column', JSON.stringify(dataColumn));\n    }\n  }\n\n  function newThemeCard(name, id) {\n    if (name !== '') {\n      const index = cards.findIndex(elem => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old,\n        theme: name,\n        changeTheme: false\n      };\n      const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextCard(text, id) {\n    if (text !== '') {\n      const index = cards.findIndex(elem => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old,\n        text: text,\n        changeText: false\n      };\n      const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextComment(text, id) {\n    if (text !== '') {\n      const index = comments.findIndex(elem => elem.idComents === id);\n      const old = comments[index];\n      const newItem = { ...old,\n        coment: text,\n        chengeComment: false\n      };\n      const newArr = [...comments.slice(0, index), newItem, ...comments.slice(index + 1)];\n      dataComments = newArr;\n      setComments(dataComments);\n      localStorage.setItem('comments', JSON.stringify(dataComments));\n    }\n  }\n\n  function addListen() {\n    document.addEventListener('keyup', event => {\n      if (event.keyCode === 27) {\n        setCreateActive([{\n          status: false,\n          createIndex: 0\n        }]);\n        setPopupCard([{\n          status: false,\n          cardIndex: 0\n        }]);\n        setChengeText(false);\n        setChengeTheme(false);\n        setSwitchs(!switchs);\n      }\n    });\n  }\n\n  if (escLisner === true) {\n    addListen();\n    setEscLisner(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NamePopup, {\n      name: name,\n      setName: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      newNameColumn: newNameColumn //todo\n      ,\n      dataCards: cards,\n      dataColumn: column,\n      setColumn: setColumn,\n      active: createActive,\n      setActive: setCreateActive,\n      onDelete: onDelete,\n      onToggleChecked: onToggleChecked,\n      setPopupCard: setPopupCard,\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateCardsPopup, {\n      setPopupCard: setPopupCard,\n      active: createActive,\n      setActive: setCreateActive,\n      addCard: addCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardPopup, {\n      dataCards: cards,\n      dataColumn: column,\n      comments: comments,\n      popupCard: popupCard,\n      setPopupCard: setPopupCard,\n      addComments: addComments,\n      onDeleteCommets: onDeleteCommets,\n      newThemeCard: newThemeCard,\n      newTextCard: newTextCard,\n      newTextComment: newTextComment,\n      chengeTheme: chengeTheme,\n      chengeText: chengeText,\n      setChengeTheme: setChengeTheme,\n      setChengeText: setChengeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pVaxxxO31emHqtM+A4GDpKBR9gw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/app/App.tsx"],"names":["React","useState","Column","CreateCardsPopup","CardPopup","NamePopup","App","dataName","localStorage","getItem","nameStr","JSON","parse","status","name","dataCards","cardsStr","theme","author","text","checked","columnID","id","dataColumn","columnStr","nameColumn","indexColumn","changeColumn","dataComments","commentStr","idComents","idCards","authorComents","coment","cards","setCards","comments","setComments","column","setColumn","setName","createActive","setCreateActive","createIndex","popupCard","setPopupCard","cardIndex","escLisner","setEscLisner","switchs","setSwitchs","chengeTheme","setChengeTheme","chengeText","setChengeText","addCard","array","idMax","i","length","newItem","newCards","setItem","stringify","addComments","comment","newComments","onDelete","deletId","findIndex","elem","before","slice","after","newArr","clearComments","map","item","push","onToggleChecked","index","old","onDeleteCommets","newNameColumn","newThemeCard","changeTheme","newTextCard","changeText","newTextComment","chengeComment","addListen","document","addEventListener","event","keyCode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Column from '../Column';\nimport CreateCardsPopup from '../CreateCardsPopup';\nimport CardPopup from '../CardPopup';\nimport NamePopup from '../NamePopup';\nimport { NameType, CardType, ColumnType, CommentType } from './entity';\nfunction App() {\n  let dataName: NameType[];\n  if (localStorage.getItem('name') != null) {\n    const nameStr = localStorage.getItem('name') as string;\n    dataName = JSON.parse(nameStr) as NameType[];\n  } else {\n    dataName = [{ status: true, name: ' ' }];\n  }\n\n  let dataCards: CardType[];\n  if (localStorage.getItem('cards') != null) {\n    const cardsStr = localStorage.getItem('cards') as string;\n    dataCards = JSON.parse(cardsStr) as CardType[];\n  } else {\n    dataCards = [\n      {\n        theme: 'Lorem Ipsum',\n        author: 'Andre',\n        text: 'Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века.',\n        checked: false,\n        columnID: 1,\n        id: 1,\n      },\n    ];\n  }\n\n  let dataColumn: ColumnType[];\n  if (localStorage.getItem('column') != null) {\n    const columnStr = localStorage.getItem('column') as string;\n    dataColumn = JSON.parse(columnStr) as ColumnType[];\n  } else {\n    dataColumn = [\n      { nameColumn: 'ToDoo', indexColumn: 1, changeColumn: false },\n      { nameColumn: 'In Progress', indexColumn: 2, changeColumn: false },\n      { nameColumn: 'Testing', indexColumn: 3, changeColumn: false },\n      { nameColumn: 'Done', indexColumn: 4, changeColumn: false },\n    ];\n  }\n\n  let dataComments: CommentType[];\n  if (localStorage.getItem('comments') != null) {\n    const commentStr = localStorage.getItem('comments') as string;\n    dataComments = JSON.parse(commentStr) as CommentType[];\n  } else {\n    dataComments = [\n      {\n        idComents: 1,\n        idCards: 1,\n        authorComents: 'Andre',\n        coment:\n          'Многие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так.',\n      },\n    ];\n  }\n\n  const [cards, setCards] = useState(dataCards);\n  const [comments, setComments] = useState(dataComments);\n  const [column, setColumn] = useState(dataColumn);\n  const [name, setName] = useState(dataName);\n  dataColumn = column;\n  dataCards = cards;\n  dataComments = comments;\n  dataName = name;\n  const [createActive, setCreateActive] = useState([\n    { status: false, createIndex: 0 },\n  ]);\n  const [popupCard, setPopupCard] = useState([{ status: false, cardIndex: 0 }]);\n  const [escLisner, setEscLisner] = useState(true);\n  const [switchs, setSwitchs] = useState(false);\n  const [chengeTheme, setChengeTheme] = useState(false);\n  const [chengeText, setChengeText] = useState(false);\n\n  function addCard(theme: string, text: string, columnID: number): void {\n    const array = dataCards;\n    const idMax = [0];\n    if (array != []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].id > idMax[0]) {\n          idMax[0] = array[i].id;\n        }\n      }\n    }\n    const newItem = {\n      theme: theme,\n      author: name[0].name,\n      text: text,\n      checked: false,\n      columnID: columnID,\n      id: idMax[0] + 1,\n    };\n    const newCards = [newItem, ...dataCards];\n    localStorage.setItem('cards', JSON.stringify(newCards));\n    setCards(newCards);\n    setSwitchs(!switchs);\n  }\n\n  function addComments(comment: string, idCards: number): void {\n    const array = dataComments;\n    const idMax = [0];\n    if (array !== []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].idComents > idMax[0]) {\n          idMax[0] = array[i].idComents;\n        }\n      }\n    }\n    const newItem = {\n      idComents: idMax[0] + 1,\n      idCards: idCards,\n      authorComents: name[0].name,\n      coment: comment,\n    };\n    const newComments = [newItem, ...dataComments];\n    localStorage.setItem('comments', JSON.stringify(newComments));\n    setComments(newComments);\n  }\n\n  function onDelete(id: number): void {\n    const deletId = cards.findIndex((elem) => elem.id === id);\n    const before = cards.slice(0, deletId);\n    const after = cards.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    const clearComments = [] as CommentType[];\n    if (dataComments !== []) {\n      dataComments.map((item) => {\n        if (item.idCards !== id) {\n          clearComments.push(item);\n        }\n      });\n      localStorage.setItem('comments', JSON.stringify(newArr));\n      setComments(clearComments);\n    }\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n\n  function onToggleChecked(id: number): void {\n    const index = cards.findIndex((elem) => elem.id === id);\n    const old = cards[index];\n    const newItem = { ...old, checked: !old.checked };\n    const newArr = [\n      ...cards.slice(0, index),\n      newItem,\n      ...cards.slice(index + 1),\n    ];\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n  function onDeleteCommets(id: number): void {\n    const deletId = comments.findIndex((elem) => elem.idComents === id);\n    const before = comments.slice(0, deletId);\n    const after = comments.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    localStorage.setItem('comments', JSON.stringify(newArr));\n    setComments(newArr);\n  }\n  function newNameColumn(name: string, id: number) {\n    if (name !== '') {\n      const index = column.findIndex((elem) => elem.indexColumn === id);\n      const old = column[index];\n      const newItem = { ...old, nameColumn: name, changeColumn: false };\n      const newArr = [\n        ...column.slice(0, index),\n        newItem,\n        ...column.slice(index + 1),\n      ];\n      dataColumn = newArr;\n      setColumn(dataColumn);\n      localStorage.setItem('column', JSON.stringify(dataColumn));\n    }\n  }\n\n  function newThemeCard(name: string, id: number) {\n    if (name !== '') {\n      const index = cards.findIndex((elem) => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old, theme: name, changeTheme: false };\n      const newArr = [\n        ...cards.slice(0, index),\n        newItem,\n        ...cards.slice(index + 1),\n      ];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextCard(text: string, id: number) {\n    if (text !== '') {\n      const index = cards.findIndex((elem) => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old, text: text, changeText: false };\n      const newArr = [\n        ...cards.slice(0, index),\n        newItem,\n        ...cards.slice(index + 1),\n      ];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextComment(text: string, id: number) {\n    if (text !== '') {\n      const index = comments.findIndex((elem) => elem.idComents === id);\n      const old = comments[index];\n      const newItem = { ...old, coment: text, chengeComment: false };\n      const newArr = [\n        ...comments.slice(0, index),\n        newItem,\n        ...comments.slice(index + 1),\n      ];\n      dataComments = newArr;\n      setComments(dataComments);\n      localStorage.setItem('comments', JSON.stringify(dataComments));\n    }\n  }\n\n  function addListen() {\n    document.addEventListener('keyup', (event) => {\n      if (event.keyCode === 27) {\n        setCreateActive([{ status: false, createIndex: 0 }]);\n        setPopupCard([{ status: false, cardIndex: 0 }]);\n        setChengeText(false);\n        setChengeTheme(false);\n        setSwitchs(!switchs);\n      }\n    });\n  }\n\n  if (escLisner === true) {\n    addListen();\n    setEscLisner(false);\n  }\n\n  return (\n    <div>\n      <NamePopup name={name} setName={setName} />\n      <Column\n        newNameColumn={newNameColumn} //todo\n        dataCards={cards}\n        dataColumn={column}\n        setColumn={setColumn}\n        active={createActive}\n        setActive={setCreateActive}\n        onDelete={onDelete}\n        onToggleChecked={onToggleChecked}\n        setPopupCard={setPopupCard}\n        comments={comments}\n      />\n      <CreateCardsPopup\n        setPopupCard={setPopupCard}\n        active={createActive}\n        setActive={setCreateActive}\n        addCard={addCard}\n      />\n      <CardPopup\n        dataCards={cards}\n        dataColumn={column}\n        comments={comments}\n        popupCard={popupCard}\n        setPopupCard={setPopupCard}\n        addComments={addComments}\n        onDeleteCommets={onDeleteCommets}\n        newThemeCard={newThemeCard}\n        newTextCard={newTextCard}\n        newTextComment={newTextComment}\n        chengeTheme={chengeTheme}\n        chengeText={chengeText}\n        setChengeTheme={setChengeTheme}\n        setChengeText={setChengeText}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}