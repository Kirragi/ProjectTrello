{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/app/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Column from '../Column';\nimport CreateCardsPopup from '../CreateCardsPopup';\nimport CardPopup from '../CardPopup';\nimport NamePopup from '../NamePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let dataName;\n\n  if (localStorage.getItem('name') != null) {\n    const nameStr = localStorage.getItem('name');\n    dataName = JSON.parse(nameStr);\n  } else {\n    dataName = [{\n      status: true,\n      name: ' '\n    }];\n  }\n\n  let dataCards;\n\n  if (localStorage.getItem('cards') != null) {\n    const cardsStr = localStorage.getItem('cards');\n    dataCards = JSON.parse(cardsStr);\n  } else {\n    dataCards = [{\n      theme: 'Lorem Ipsum',\n      author: 'Andre',\n      text: 'Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века.',\n      checked: false,\n      columnID: 1,\n      id: 1,\n      changeTheme: false,\n      changeText: false\n    }];\n  }\n\n  let dataColumn;\n\n  if (localStorage.getItem('column') != null) {\n    const columnStr = localStorage.getItem('column');\n    dataColumn = JSON.parse(columnStr);\n  } else {\n    dataColumn = [{\n      nameColumn: 'ToDoo',\n      indexColumn: 1,\n      changeColumn: false\n    }, {\n      nameColumn: 'In Progress',\n      indexColumn: 2,\n      changeColumn: false\n    }, {\n      nameColumn: 'Testing',\n      indexColumn: 3,\n      changeColumn: false\n    }, {\n      nameColumn: 'Done',\n      indexColumn: 4,\n      changeColumn: false\n    }];\n  }\n\n  let dataComments;\n\n  if (localStorage.getItem('comments') != null) {\n    const commentStr = localStorage.getItem('comments');\n    dataComments = JSON.parse(commentStr);\n  } else {\n    dataComments = [{\n      idComents: 1,\n      idCards: 1,\n      authorComents: 'Andre',\n      coment: 'Многие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так.',\n      chengeComment: false\n    }];\n  }\n\n  const [cards, setCards] = useState(dataCards);\n  const [comments, setComments] = useState(dataComments);\n  const [column, setColumn] = useState(dataColumn);\n  const [name, setName] = useState(dataName);\n  dataColumn = column;\n  dataCards = cards;\n  dataComments = comments;\n  dataName = name;\n  const [createActive, setCreateActive] = useState([{\n    status: false,\n    createIndex: 0\n  }]);\n  const [popupCard, setPopupCard] = useState([{\n    status: false,\n    cardIndex: 0\n  }]);\n  const [escLisner, setEscLisner] = useState(true);\n  const [switchs, setSwitchs] = useState(false);\n\n  function addCard(theme, text, columnID) {\n    const array = dataCards;\n    const idMax = [0];\n\n    if (array != []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].id > idMax[0]) {\n          idMax[0] = array[i].id;\n        }\n      }\n    }\n\n    const newItem = {\n      theme: theme,\n      author: name[0].name,\n      text: text,\n      checked: false,\n      columnID: columnID,\n      id: idMax[0] + 1,\n      changeTheme: false,\n      changeText: false\n    };\n    const newCards = [newItem, ...dataCards];\n    localStorage.setItem('cards', JSON.stringify(newCards));\n    setCards(newCards);\n    setSwitchs(!switchs);\n  }\n\n  function addComments(comment, idCards) {\n    const array = dataComments;\n    const idMax = [0];\n\n    if (array !== []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].idComents > idMax[0]) {\n          idMax[0] = array[i].idComents;\n        }\n      }\n    }\n\n    const newItem = {\n      idComents: idMax[0] + 1,\n      idCards: idCards,\n      authorComents: name[0].name,\n      coment: comment,\n      chengeComment: false\n    };\n    const newComments = [newItem, ...dataComments];\n    localStorage.setItem('comments', JSON.stringify(newComments));\n    setComments(newComments);\n  }\n\n  function onDelete(id) {\n    const deletId = cards.findIndex(elem => elem.id === id);\n    const before = cards.slice(0, deletId);\n    const after = cards.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    const clearComments = [];\n\n    if (dataComments !== []) {\n      dataComments.map(item => {\n        if (item.idCards !== id) {\n          clearComments.push(item);\n        }\n      });\n      localStorage.setItem('comments', JSON.stringify(newArr));\n      setComments(clearComments);\n    }\n\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n\n  function onToggleChecked(id) {\n    const index = cards.findIndex(elem => elem.id === id);\n    const old = cards[index];\n    const newItem = { ...old,\n      checked: !old.checked\n    };\n    const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n\n  function onDeleteCommets(id) {\n    const deletId = comments.findIndex(elem => elem.idComents === id);\n    const before = comments.slice(0, deletId);\n    const after = comments.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    localStorage.setItem('comments', JSON.stringify(newArr));\n    setComments(newArr);\n  }\n\n  function closeChenge() {\n    for (let i = 0; i < dataColumn.length; i++) {\n      dataColumn[i].changeColumn = false;\n      setColumn(dataColumn);\n      setSwitchs(!switchs);\n    }\n  }\n\n  function changeStatusColumn(id) {\n    for (let i = 0; i < dataColumn.length; i++) {\n      if (dataColumn[i].indexColumn === id) {\n        dataColumn[i].changeColumn = true;\n      } else {\n        dataColumn[i].changeColumn = false;\n      }\n    }\n\n    setColumn(dataColumn);\n    setSwitchs(!switchs);\n  }\n\n  function newNameColumn(name, id) {\n    if (name !== '') {\n      const index = column.findIndex(elem => elem.indexColumn === id);\n      const old = column[index];\n      const newItem = { ...old,\n        nameColumn: name,\n        changeColumn: false\n      };\n      const newArr = [...column.slice(0, index), newItem, ...column.slice(index + 1)];\n      dataColumn = newArr;\n      setColumn(dataColumn);\n      localStorage.setItem('column', JSON.stringify(dataColumn));\n    }\n  }\n\n  function newThemeCard(name, id) {\n    if (name !== '') {\n      const index = cards.findIndex(elem => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old,\n        theme: name,\n        changeTheme: false\n      };\n      const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextCard(text, id) {\n    if (text !== '') {\n      const index = cards.findIndex(elem => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old,\n        text: text,\n        changeText: false\n      };\n      const newArr = [...cards.slice(0, index), newItem, ...cards.slice(index + 1)];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n\n  function newTextComment(text, id) {\n    if (text !== '') {\n      const index = comments.findIndex(elem => elem.idComents === id);\n      const old = comments[index];\n      const newItem = { ...old,\n        coment: text,\n        chengeComment: false\n      };\n      const newArr = [...comments.slice(0, index), newItem, ...comments.slice(index + 1)];\n      dataComments = newArr;\n      setComments(dataComments);\n      localStorage.setItem('comments', JSON.stringify(dataComments));\n    }\n  }\n\n  function addListen() {\n    document.addEventListener('keyup', event => {\n      if (event.keyCode === 27) {\n        closeChenge();\n        setCreateActive([{\n          status: false,\n          createIndex: 0\n        }]);\n        setPopupCard([{\n          status: false,\n          cardIndex: 0\n        }]);\n        setSwitchs(!switchs);\n      }\n    });\n  }\n\n  if (escLisner === true) {\n    addListen();\n    setEscLisner(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NamePopup, {\n      name: name,\n      setName: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      newNameColumn: newNameColumn //todo\n      ,\n      dataCards: cards,\n      dataColumn: column,\n      setColumn: setColumn,\n      changeStatusColumn: changeStatusColumn,\n      active: createActive,\n      setActive: setCreateActive,\n      onDelete: onDelete,\n      onToggleChecked: onToggleChecked,\n      setPopupCard: setPopupCard,\n      switchs: switchs,\n      setSwitchs: setSwitchs,\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateCardsPopup, {\n      setPopupCard: setPopupCard,\n      active: createActive,\n      setActive: setCreateActive,\n      addCard: addCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardPopup, {\n      dataCards: cards,\n      dataColumn: column,\n      comments: comments,\n      popupCard: popupCard,\n      setPopupCard: setPopupCard,\n      addComments: addComments,\n      onDeleteCommets: onDeleteCommets,\n      switchs: switchs,\n      setSwitchs: setSwitchs,\n      newThemeCard: newThemeCard,\n      newTextCard: newTextCard,\n      newTextComment: newTextComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sFxKgDYkOSYtKwGL61ckZgusxCk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/app/App.tsx"],"names":["React","useState","Column","CreateCardsPopup","CardPopup","NamePopup","App","dataName","localStorage","getItem","nameStr","JSON","parse","status","name","dataCards","cardsStr","theme","author","text","checked","columnID","id","changeTheme","changeText","dataColumn","columnStr","nameColumn","indexColumn","changeColumn","dataComments","commentStr","idComents","idCards","authorComents","coment","chengeComment","cards","setCards","comments","setComments","column","setColumn","setName","createActive","setCreateActive","createIndex","popupCard","setPopupCard","cardIndex","escLisner","setEscLisner","switchs","setSwitchs","addCard","array","idMax","i","length","newItem","newCards","setItem","stringify","addComments","comment","newComments","onDelete","deletId","findIndex","elem","before","slice","after","newArr","clearComments","map","item","push","onToggleChecked","index","old","onDeleteCommets","closeChenge","changeStatusColumn","newNameColumn","newThemeCard","newTextCard","newTextComment","addListen","document","addEventListener","event","keyCode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Column from '../Column';\nimport CreateCardsPopup from '../CreateCardsPopup';\nimport CardPopup from '../CardPopup';\nimport NamePopup from '../NamePopup';\nimport { NameType, CardType, ColumnType, CommentType } from './entity';\nfunction App() {\n  let dataName: NameType[];\n  if (localStorage.getItem('name') != null) {\n    const nameStr = localStorage.getItem('name') as string;\n    dataName = JSON.parse(nameStr) as NameType[];\n  } else {\n    dataName = [{ status: true, name: ' ' }];\n  }\n  let dataCards: CardType[];\n  if (localStorage.getItem('cards') != null) {\n    const cardsStr = localStorage.getItem('cards') as string;\n    dataCards = JSON.parse(cardsStr) as CardType[];\n  } else {\n    dataCards = [\n      {\n        theme: 'Lorem Ipsum',\n        author: 'Andre',\n        text: 'Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века.',\n        checked: false,\n        columnID: 1,\n        id: 1,\n        changeTheme: false,\n        changeText: false,\n      },\n    ];\n  }\n\n  let dataColumn: ColumnType[];\n  if (localStorage.getItem('column') != null) {\n    const columnStr = localStorage.getItem('column') as string;\n    dataColumn = JSON.parse(columnStr) as ColumnType[];\n  } else {\n    dataColumn = [\n      { nameColumn: 'ToDoo', indexColumn: 1, changeColumn: false },\n      { nameColumn: 'In Progress', indexColumn: 2, changeColumn: false },\n      { nameColumn: 'Testing', indexColumn: 3, changeColumn: false },\n      { nameColumn: 'Done', indexColumn: 4, changeColumn: false },\n    ];\n  }\n  let dataComments: CommentType[];\n  if (localStorage.getItem('comments') != null) {\n    const commentStr = localStorage.getItem('comments') as string;\n    dataComments = JSON.parse(commentStr) as CommentType[];\n  } else {\n    dataComments = [\n      {\n        idComents: 1,\n        idCards: 1,\n        authorComents: 'Andre',\n        coment:\n          'Многие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так.',\n        chengeComment: false,\n      },\n    ];\n  }\n  const [cards, setCards] = useState(dataCards);\n  const [comments, setComments] = useState(dataComments);\n  const [column, setColumn] = useState(dataColumn);\n  const [name, setName] = useState(dataName);\n  dataColumn = column;\n  dataCards = cards;\n  dataComments = comments;\n  dataName = name;\n  const [createActive, setCreateActive] = useState([\n    { status: false, createIndex: 0 },\n  ]);\n  const [popupCard, setPopupCard] = useState([{ status: false, cardIndex: 0 }]);\n  const [escLisner, setEscLisner] = useState(true);\n  const [switchs, setSwitchs] = useState(false);\n\n  function addCard(theme: string, text: string, columnID: number): void {\n    const array = dataCards;\n    const idMax = [0];\n    if (array != []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].id > idMax[0]) {\n          idMax[0] = array[i].id;\n        }\n      }\n    }\n    const newItem = {\n      theme: theme,\n      author: name[0].name,\n      text: text,\n      checked: false,\n      columnID: columnID,\n      id: idMax[0] + 1,\n      changeTheme: false,\n      changeText: false,\n    };\n    const newCards = [newItem, ...dataCards];\n    localStorage.setItem('cards', JSON.stringify(newCards));\n    setCards(newCards);\n    setSwitchs(!switchs);\n  }\n  function addComments(comment: string, idCards: number): void {\n    const array = dataComments;\n    const idMax = [0];\n    if (array !== []) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].idComents > idMax[0]) {\n          idMax[0] = array[i].idComents;\n        }\n      }\n    }\n    const newItem = {\n      idComents: idMax[0] + 1,\n      idCards: idCards,\n      authorComents: name[0].name,\n      coment: comment,\n      chengeComment: false,\n    };\n    const newComments = [newItem, ...dataComments];\n    localStorage.setItem('comments', JSON.stringify(newComments));\n    setComments(newComments);\n  }\n  function onDelete(id: number): void {\n    const deletId = cards.findIndex((elem) => elem.id === id);\n    const before = cards.slice(0, deletId);\n    const after = cards.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    const clearComments = [] as CommentType[];\n    if (dataComments !== []) {\n      dataComments.map((item) => {\n        if (item.idCards !== id) {\n          clearComments.push(item);\n        }\n      });\n      localStorage.setItem('comments', JSON.stringify(newArr));\n      setComments(clearComments);\n    }\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n  function onToggleChecked(id: number): void {\n    const index = cards.findIndex((elem) => elem.id === id);\n    const old = cards[index];\n    const newItem = { ...old, checked: !old.checked };\n    const newArr = [\n      ...cards.slice(0, index),\n      newItem,\n      ...cards.slice(index + 1),\n    ];\n    localStorage.setItem('cards', JSON.stringify(newArr));\n    setCards(newArr);\n  }\n  function onDeleteCommets(id: number): void {\n    const deletId = comments.findIndex((elem) => elem.idComents === id);\n    const before = comments.slice(0, deletId);\n    const after = comments.slice(deletId + 1);\n    const newArr = [...before, ...after];\n    localStorage.setItem('comments', JSON.stringify(newArr));\n    setComments(newArr);\n  }\n  function closeChenge() {\n    for (let i = 0; i < dataColumn.length; i++) {\n      dataColumn[i].changeColumn = false;\n      setColumn(dataColumn);\n      setSwitchs(!switchs);\n    }\n  }\n  function changeStatusColumn(id: number) {\n    for (let i = 0; i < dataColumn.length; i++) {\n      if (dataColumn[i].indexColumn === id) {\n        dataColumn[i].changeColumn = true;\n      } else {\n        dataColumn[i].changeColumn = false;\n      }\n    }\n    setColumn(dataColumn);\n    setSwitchs(!switchs);\n  }\n  function newNameColumn(name: string, id: number) {\n    if (name !== '') {\n      const index = column.findIndex((elem) => elem.indexColumn === id);\n      const old = column[index];\n      const newItem = { ...old, nameColumn: name, changeColumn: false };\n      const newArr = [\n        ...column.slice(0, index),\n        newItem,\n        ...column.slice(index + 1),\n      ];\n      dataColumn = newArr;\n      setColumn(dataColumn);\n      localStorage.setItem('column', JSON.stringify(dataColumn));\n    }\n  }\n  function newThemeCard(name: string, id: number) {\n    if (name !== '') {\n      const index = cards.findIndex((elem) => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old, theme: name, changeTheme: false };\n      const newArr = [\n        ...cards.slice(0, index),\n        newItem,\n        ...cards.slice(index + 1),\n      ];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n  function newTextCard(text: string, id: number) {\n    if (text !== '') {\n      const index = cards.findIndex((elem) => elem.id === id);\n      const old = cards[index];\n      const newItem = { ...old, text: text, changeText: false };\n      const newArr = [\n        ...cards.slice(0, index),\n        newItem,\n        ...cards.slice(index + 1),\n      ];\n      dataCards = newArr;\n      setCards(dataCards);\n      localStorage.setItem('cards', JSON.stringify(dataCards));\n    }\n  }\n  function newTextComment(text: string, id: number) {\n    if (text !== '') {\n      const index = comments.findIndex((elem) => elem.idComents === id);\n      const old = comments[index];\n      const newItem = { ...old, coment: text, chengeComment: false };\n      const newArr = [\n        ...comments.slice(0, index),\n        newItem,\n        ...comments.slice(index + 1),\n      ];\n      dataComments = newArr;\n      setComments(dataComments);\n      localStorage.setItem('comments', JSON.stringify(dataComments));\n    }\n  }\n  function addListen() {\n    document.addEventListener('keyup', (event) => {\n      if (event.keyCode === 27) {\n        closeChenge();\n        setCreateActive([{ status: false, createIndex: 0 }]);\n        setPopupCard([{ status: false, cardIndex: 0 }]);\n        setSwitchs(!switchs);\n      }\n    });\n  }\n  if (escLisner === true) {\n    addListen();\n    setEscLisner(false);\n  }\n  return (\n    <div>\n      <NamePopup name={name} setName={setName} />\n      <Column\n        newNameColumn={newNameColumn} //todo\n        dataCards={cards}\n        dataColumn={column}\n        setColumn={setColumn}\n        changeStatusColumn={changeStatusColumn}\n        active={createActive}\n        setActive={setCreateActive}\n        onDelete={onDelete}\n        onToggleChecked={onToggleChecked}\n        setPopupCard={setPopupCard}\n        switchs={switchs}\n        setSwitchs={setSwitchs}\n        comments={comments}\n      />\n      <CreateCardsPopup\n        setPopupCard={setPopupCard}\n        active={createActive}\n        setActive={setCreateActive}\n        addCard={addCard}\n      />\n      <CardPopup\n        dataCards={cards}\n        dataColumn={column}\n        comments={comments}\n        popupCard={popupCard}\n        setPopupCard={setPopupCard}\n        addComments={addComments}\n        onDeleteCommets={onDeleteCommets}\n        switchs={switchs}\n        setSwitchs={setSwitchs}\n        newThemeCard={newThemeCard}\n        newTextCard={newTextCard}\n        newTextComment={newTextComment}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}