{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/Column/Column.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cards from '../Cards';\nimport ChengeIcon from '../assets/img/ChengeIcon.png';\nimport plusIcon from '../assets/img/plus.png';\nimport { NameColumn, ImgColumn, ButtonChenge, ButtonPlus, Flex, ButtonColumn, InputName, ChengeWraper, ColumnWraper, ColumnContent, CardsIten } from './ColumnStyling';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Column(props) {\n  _s();\n\n  const [newNameColumn, setNameColumn] = useState('');\n\n  function onNewNameColumn(e) {\n    setNameColumn(e.currentTarget.value);\n  }\n\n  function onChenge(value, indexCol) {\n    props.changeStatusColumn(indexCol);\n    setNameColumn(value);\n  }\n\n  const elementsColumn = props.dataColumn.map(itemColumn => {\n    const {\n      nameColumn,\n      indexColumn\n    } = itemColumn;\n    let change;\n\n    if (itemColumn.changeColumn === false) {\n      change = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(NameColumn, {\n            children: nameColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonChenge, {\n            onClick: () => onChenge({\n              nameColumn\n            }.nameColumn, itemColumn.indexColumn),\n            children: /*#__PURE__*/_jsxDEV(ImgColumn, {\n              src: ChengeIcon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n            onClick: () => props.setActive([{\n              status: true,\n              createIndex: {\n                indexColumn\n              }.indexColumn\n            }]),\n            children: /*#__PURE__*/_jsxDEV(ImgColumn, {\n              src: plusIcon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      change = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ChengeWraper, {\n          children: [/*#__PURE__*/_jsxDEV(InputName, {\n            type: \"text\",\n            defaultValue: nameColumn,\n            onChange: onNewNameColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonColumn, {\n            onClick: () => props.NewNameColumn(newNameColumn, itemColumn.indexColumn),\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n\n    const elements = props.dataCards.map(itemCards => {\n      const {\n        theme,\n        author,\n        columnID,\n        text,\n        checked,\n        id\n      } = itemCards;\n\n      if ({\n        columnID\n      }.columnID === {\n        indexColumn\n      }.indexColumn) {\n        return /*#__PURE__*/_jsxDEV(CardsIten, {\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            cards: props.dataCards,\n            theme: theme,\n            author: author,\n            text: text,\n            checked: checked,\n            id: id,\n            onDelete: () => props.onDelete(id),\n            onToggleChecked: () => props.onToggleChecked(id),\n            setPopupCard: props.setPopupCard,\n            switchs: props.switchs,\n            setSwitchs: props.setSwitchs,\n            comments: props.comments,\n            setComments: props.setComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(ColumnContent, {\n      className: \"column\",\n      children: [change, elements]\n    }, indexColumn, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(ColumnWraper, {\n    children: elementsColumn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Column, \"ub7rWv281kUL21KunZtVX6M7j+Q=\");\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/Column/Column.tsx"],"names":["React","useState","Cards","ChengeIcon","plusIcon","NameColumn","ImgColumn","ButtonChenge","ButtonPlus","Flex","ButtonColumn","InputName","ChengeWraper","ColumnWraper","ColumnContent","CardsIten","Column","props","newNameColumn","setNameColumn","onNewNameColumn","e","currentTarget","value","onChenge","indexCol","changeStatusColumn","elementsColumn","dataColumn","map","itemColumn","nameColumn","indexColumn","change","changeColumn","setActive","status","createIndex","NewNameColumn","elements","dataCards","itemCards","theme","author","columnID","text","checked","id","onDelete","onToggleChecked","setPopupCard","switchs","setSwitchs","comments","setComments"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Cards from '../Cards';\nimport ChengeIcon from '../assets/img/ChengeIcon.png';\nimport plusIcon from '../assets/img/plus.png';\nimport { columnProps } from '../app/entity';\nimport {\n  NameColumn,\n  ImgColumn,\n  ButtonChenge,\n  ButtonPlus,\n  Flex,\n  ButtonColumn,\n  InputName,\n  ChengeWraper,\n  ColumnWraper,\n  ColumnContent,\n  CardsIten,\n} from './ColumnStyling';\nfunction Column(props: columnProps) {\n  const [newNameColumn, setNameColumn] = useState('');\n  function onNewNameColumn(e: React.FormEvent<HTMLInputElement>): void {\n    setNameColumn(e.currentTarget.value);\n  }\n  function onChenge(value: string, indexCol: number) {\n    props.changeStatusColumn(indexCol);\n    setNameColumn(value);\n  }\n  const elementsColumn = props.dataColumn.map((itemColumn) => {\n    const { nameColumn, indexColumn } = itemColumn;\n    let change: JSX.Element;\n    if (itemColumn.changeColumn === false) {\n      change = (\n        <div>\n          <Flex>\n            <NameColumn>{nameColumn}</NameColumn>\n            <ButtonChenge\n              onClick={() =>\n                onChenge({ nameColumn }.nameColumn, itemColumn.indexColumn)\n              }>\n              <ImgColumn src={ChengeIcon} alt=\"\" />\n            </ButtonChenge>\n            <ButtonPlus\n              onClick={() =>\n                props.setActive([\n                  { status: true, createIndex: { indexColumn }.indexColumn },\n                ])\n              }>\n              <ImgColumn src={plusIcon} alt=\"\" />\n            </ButtonPlus>\n          </Flex>\n        </div>\n      );\n    } else {\n      change = (\n        <div>\n          <ChengeWraper>\n            <InputName\n              type=\"text\"\n              defaultValue={nameColumn}\n              onChange={onNewNameColumn}\n            />\n            <ButtonColumn\n              onClick={() =>\n                props.NewNameColumn(newNameColumn, itemColumn.indexColumn)\n              }>\n              Изменить\n            </ButtonColumn>\n          </ChengeWraper>\n        </div>\n      );\n    }\n    const elements = props.dataCards.map((itemCards) => {\n      const { theme, author, columnID, text, checked, id } = itemCards;\n      if ({ columnID }.columnID === { indexColumn }.indexColumn) {\n        return (\n          <CardsIten key={id}>\n            <Cards\n              cards={props.dataCards}\n              theme={theme}\n              author={author}\n              text={text}\n              checked={checked}\n              id={id}\n              onDelete={() => props.onDelete(id)}\n              onToggleChecked={() => props.onToggleChecked(id)}\n              setPopupCard={props.setPopupCard}\n              switchs={props.switchs}\n              setSwitchs={props.setSwitchs}\n              comments={props.comments}\n              setComments={props.setComments}\n            />\n          </CardsIten>\n        );\n      }\n    });\n    return (\n      <ColumnContent className=\"column\" key={indexColumn}>\n        {change}\n        {elements}\n      </ColumnContent>\n    );\n  });\n  return <ColumnWraper>{elementsColumn}</ColumnWraper>;\n}\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}