{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/Column/Column.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cards from '../Cards';\nimport ChengeIcon from '../assets/img/ChengeIcon.png';\nimport plusIcon from '../assets/img/plus.png';\nimport { NameColumn, ImgColumn, ButtonChenge, ButtonPlus, Flex, ButtonColumn, InputName, ChengeWraper, ColumnWraper, ColumnContent, CardsItem } from './columnStyling';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Column(props) {\n  _s();\n\n  const [newNameColumn, setNameColumn] = useState('');\n  cosnt[(chengeColumn, setChengeColumn)] = useState();\n\n  function onNewNameColumn(e) {\n    setNameColumn(e.currentTarget.value);\n  }\n\n  function onChenge(value, indexCol) {\n    props.changeStatusColumn(indexCol);\n    setNameColumn(value);\n  }\n\n  const elementsColumn = props.dataColumn.map(itemColumn => {\n    const {\n      nameColumn,\n      indexColumn\n    } = itemColumn;\n    let change;\n\n    if (itemColumn.changeColumn === false) {\n      change = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(NameColumn, {\n            children: nameColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonChenge, {\n            onClick: () => onChenge({\n              nameColumn\n            }.nameColumn, itemColumn.indexColumn),\n            children: /*#__PURE__*/_jsxDEV(ImgColumn, {\n              src: ChengeIcon,\n              alt: \"chenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n            onClick: () => props.setActive([{\n              status: true,\n              createIndex: {\n                indexColumn\n              }.indexColumn\n            }]),\n            children: /*#__PURE__*/_jsxDEV(ImgColumn, {\n              src: plusIcon,\n              alt: \"plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    } else {\n      change = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ChengeWraper, {\n          children: [/*#__PURE__*/_jsxDEV(InputName, {\n            type: \"text\",\n            defaultValue: nameColumn,\n            onChange: onNewNameColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonColumn, {\n            onClick: () => props.newNameColumn(newNameColumn, itemColumn.indexColumn),\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n\n    const elements = props.dataCards.map(itemCards => {\n      const card = itemCards;\n\n      if (itemCards.columnID === {\n        indexColumn\n      }.indexColumn) {\n        return /*#__PURE__*/_jsxDEV(CardsItem, {\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            cards: props.dataCards,\n            card: card,\n            onDelete: () => props.onDelete(itemCards.id),\n            onToggleChecked: () => props.onToggleChecked(itemCards.id),\n            setPopupCard: props.setPopupCard,\n            comments: props.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, itemCards.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(ColumnContent, {\n      children: [change, elements]\n    }, indexColumn, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(ColumnWraper, {\n    children: elementsColumn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Column, \"jEzurBMEOVePjMW+3WTbJqEaaj4=\");\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/Column/Column.tsx"],"names":["React","useState","Cards","ChengeIcon","plusIcon","NameColumn","ImgColumn","ButtonChenge","ButtonPlus","Flex","ButtonColumn","InputName","ChengeWraper","ColumnWraper","ColumnContent","CardsItem","Column","props","newNameColumn","setNameColumn","cosnt","chengeColumn","setChengeColumn","onNewNameColumn","e","currentTarget","value","onChenge","indexCol","changeStatusColumn","elementsColumn","dataColumn","map","itemColumn","nameColumn","indexColumn","change","changeColumn","setActive","status","createIndex","elements","dataCards","itemCards","card","columnID","onDelete","id","onToggleChecked","setPopupCard","comments"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Cards from '../Cards';\nimport ChengeIcon from '../assets/img/ChengeIcon.png';\nimport plusIcon from '../assets/img/plus.png';\nimport { ColumnProps } from '../app/entity';\nimport {\n  NameColumn,\n  ImgColumn,\n  ButtonChenge,\n  ButtonPlus,\n  Flex,\n  ButtonColumn,\n  InputName,\n  ChengeWraper,\n  ColumnWraper,\n  ColumnContent,\n  CardsItem,\n} from './columnStyling';\n\nfunction Column(props: ColumnProps) {\n  const [newNameColumn, setNameColumn] = useState('');\n  cosnt[(chengeColumn, setChengeColumn)] = useState();\n\n  function onNewNameColumn(e: React.FormEvent<HTMLInputElement>): void {\n    setNameColumn(e.currentTarget.value);\n  }\n\n  function onChenge(value: string, indexCol: number) {\n    props.changeStatusColumn(indexCol);\n    setNameColumn(value);\n  }\n\n  const elementsColumn = props.dataColumn.map((itemColumn) => {\n    const { nameColumn, indexColumn } = itemColumn;\n    let change: JSX.Element;\n    if (itemColumn.changeColumn === false) {\n      change = (\n        <div>\n          <Flex>\n            <NameColumn>{nameColumn}</NameColumn>\n            <ButtonChenge\n              onClick={() =>\n                onChenge({ nameColumn }.nameColumn, itemColumn.indexColumn)\n              }>\n              <ImgColumn src={ChengeIcon} alt=\"chenge\" />\n            </ButtonChenge>\n            <ButtonPlus\n              onClick={() =>\n                props.setActive([\n                  { status: true, createIndex: { indexColumn }.indexColumn },\n                ])\n              }>\n              <ImgColumn src={plusIcon} alt=\"plus\" />\n            </ButtonPlus>\n          </Flex>\n        </div>\n      );\n    } else {\n      change = (\n        <div>\n          <ChengeWraper>\n            <InputName\n              type=\"text\"\n              defaultValue={nameColumn}\n              onChange={onNewNameColumn}\n            />\n            <ButtonColumn\n              onClick={() =>\n                props.newNameColumn(newNameColumn, itemColumn.indexColumn)\n              }>\n              Изменить\n            </ButtonColumn>\n          </ChengeWraper>\n        </div>\n      );\n    }\n\n    const elements = props.dataCards.map((itemCards) => {\n      const card = itemCards;\n      if (itemCards.columnID === { indexColumn }.indexColumn) {\n        return (\n          <CardsItem key={itemCards.id}>\n            <Cards\n              cards={props.dataCards}\n              card={card}\n              onDelete={() => props.onDelete(itemCards.id)}\n              onToggleChecked={() => props.onToggleChecked(itemCards.id)}\n              setPopupCard={props.setPopupCard}\n              comments={props.comments}\n            />\n          </CardsItem>\n        );\n      }\n    });\n\n    return (\n      <ColumnContent key={indexColumn}>\n        {change}\n        {elements}\n      </ColumnContent>\n    );\n  });\n  return <ColumnWraper>{elementsColumn}</ColumnWraper>;\n}\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}