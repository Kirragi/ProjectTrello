{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/Cards/Cards.tsx\";\nimport React from 'react';\nimport trashIcon from '../assets/img/trash.png';\nimport openIcon from '../assets/img/open.png';\nimport closeIcon from '../assets/img/close.png';\nimport { CardWraper, ButtonCards, ImgCards, ButtonWraper, ThemeColumn, FooterCard } from './CardsStyling';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  const {\n    theme,\n    author,\n    text,\n    onDelete,\n    checked,\n    onToggleChecked,\n    setPopupCard,\n    id,\n    switchs,\n    setSwitchs\n  } = props;\n  let checedIcons;\n\n  if (checked) {\n    checedIcons = /*#__PURE__*/_jsxDEV(ImgCards, {\n      src: openIcon,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this);\n  } else {\n    checedIcons = /*#__PURE__*/_jsxDEV(ImgCards, {\n      src: closeIcon,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this);\n  }\n\n  const CardIndex = props.cards.findIndex(elem => elem.id === id);\n\n  function openPopup() {\n    setPopupCard([{\n      status: true,\n      cardIndex: id\n    }]);\n    props.cards[CardIndex].changeText = false;\n    props.cards[CardIndex].changeTheme = false;\n\n    for (let i = 0; i < props.comments.length; i++) {\n      props.comments[i].chengeComment = false;\n    }\n\n    setSwitchs(!switchs);\n  }\n\n  const colComment = [0];\n  props.comments.map(item => {\n    if (item.idCards === id) {\n      colComment[0] += 1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CardWraper, {\n    onClick: () => openPopup(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__info-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ThemeColumn, {\n        children: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card__autor\",\n        children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440: \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__text-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card__text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438:\", colComment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWraper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(ButtonCards, {\n            className: \"card__checked-btn card__btn\",\n            onClick: () => onToggleChecked(id),\n            children: checedIcons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(ButtonCards, {\n            onClick: () => onDelete(id),\n            children: /*#__PURE__*/_jsxDEV(ImgCards, {\n              src: trashIcon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/Cards/Cards.tsx"],"names":["React","trashIcon","openIcon","closeIcon","CardWraper","ButtonCards","ImgCards","ButtonWraper","ThemeColumn","FooterCard","Cards","props","theme","author","text","onDelete","checked","onToggleChecked","setPopupCard","id","switchs","setSwitchs","checedIcons","CardIndex","cards","findIndex","elem","openPopup","status","cardIndex","changeText","changeTheme","i","comments","length","chengeComment","colComment","map","item","idCards","e","stopPropagation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport trashIcon from '../assets/img/trash.png';\nimport openIcon from '../assets/img/open.png';\nimport closeIcon from '../assets/img/close.png';\nimport { cardType, commentType, popupCardType } from '../app/entity';\nimport {\n  CardWraper,\n  ButtonCards,\n  ImgCards,\n  ButtonWraper,\n  ThemeColumn,\n  FooterCard,\n} from './CardsStyling';\nfunction Cards(props: {\n  cards: cardType;\n  theme: string;\n  author: string;\n  text: string;\n  checked: boolean;\n  id: number;\n  onDelete(id: number): void;\n  onToggleChecked(id: number): void;\n  setPopupCard(popupCard: popupCardType): void;\n  comments: commentType;\n  setComments(comments: commentType): void;\n  switchs: boolean;\n  setSwitchs(switchs: boolean): void;\n}) {\n  const {\n    theme,\n    author,\n    text,\n    onDelete,\n    checked,\n    onToggleChecked,\n    setPopupCard,\n    id,\n    switchs,\n    setSwitchs,\n  } = props;\n  let checedIcons: JSX.Element;\n  if (checked) {\n    checedIcons = <ImgCards src={openIcon} alt=\"\" />;\n  } else {\n    checedIcons = <ImgCards src={closeIcon} alt=\"\" />;\n  }\n  const CardIndex = props.cards.findIndex((elem) => elem.id === id);\n  function openPopup() {\n    setPopupCard([{ status: true, cardIndex: id }]);\n    props.cards[CardIndex].changeText = false;\n    props.cards[CardIndex].changeTheme = false;\n    for (let i = 0; i < props.comments.length; i++) {\n      props.comments[i].chengeComment = false;\n    }\n    setSwitchs(!switchs) as void;\n  }\n  const colComment = [0];\n  props.comments.map((item) => {\n    if (item.idCards === id) {\n      colComment[0] += 1;\n    }\n  });\n  return (\n    <CardWraper onClick={() => openPopup()}>\n      <div className=\"card__info-wrapper\">\n        <ThemeColumn>{theme}</ThemeColumn>\n        <p className=\"card__autor\">Автор: {author}</p>\n        <div className=\"card__text-wrapper\">\n          <span className=\"card__text\">{text}</span>\n        </div>\n      </div>\n      <FooterCard>\n        <p>Комментарии:{colComment}</p>\n        <ButtonWraper>\n          <div onClick={(e) => e.stopPropagation()}>\n            <ButtonCards\n              className=\"card__checked-btn card__btn\"\n              onClick={() => onToggleChecked(id)}>\n              {checedIcons}\n            </ButtonCards>\n          </div>\n          <div onClick={(e) => e.stopPropagation()}>\n            <ButtonCards onClick={() => onDelete(id)}>\n              <ImgCards src={trashIcon} alt=\"\" />\n            </ButtonCards>\n          </div>\n        </ButtonWraper>\n      </FooterCard>\n    </CardWraper>\n  );\n}\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}