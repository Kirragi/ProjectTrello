{"ast":null,"code":"var _jsxFileName = \"/Users/Kirragi/Desktop/trello/src/components/Cards/Cards.tsx\";\nimport React from 'react';\nimport trashIcon from '../assets/img/trash.png';\nimport openIcon from '../assets/img/open.png';\nimport closeIcon from '../assets/img/close.png';\nimport { CardWraper, ButtonCards, ImgCards, ButtonWraper, ThemeColumn, FooterCard } from './cardsStyling';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  let checedIcons;\n\n  if (props.card.checked) {\n    checedIcons = /*#__PURE__*/_jsxDEV(ImgCards, {\n      src: openIcon,\n      alt: \"checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this);\n  } else {\n    checedIcons = /*#__PURE__*/_jsxDEV(ImgCards, {\n      src: closeIcon,\n      alt: \"checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this);\n  }\n\n  function openPopup() {\n    props.setPopupCard([{\n      status: true,\n      cardIndex: props.card.id\n    }]);\n  }\n\n  const colComment = [0];\n  props.comments.map(item => {\n    if (item.idCards === props.card.id) {\n      colComment[0] += 1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CardWraper, {\n    onClick: () => openPopup(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__info-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ThemeColumn, {\n        children: props.card.theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card__autor\",\n        children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440: \", props.card.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__text-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card__text\",\n          children: props.card.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438:\", colComment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWraper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(ButtonCards, {\n            onClick: () => props.onToggleChecked(props.card.id),\n            children: checedIcons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(ButtonCards, {\n            onClick: () => props.onDelete(props.card.id),\n            children: /*#__PURE__*/_jsxDEV(ImgCards, {\n              src: trashIcon,\n              alt: \"trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/Kirragi/Desktop/trello/src/components/Cards/Cards.tsx"],"names":["React","trashIcon","openIcon","closeIcon","CardWraper","ButtonCards","ImgCards","ButtonWraper","ThemeColumn","FooterCard","Cards","props","checedIcons","card","checked","openPopup","setPopupCard","status","cardIndex","id","colComment","comments","map","item","idCards","theme","author","text","e","stopPropagation","onToggleChecked","onDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,UANF,QAOO,gBAPP;;;AASA,SAASC,KAAT,CAAeC,KAAf,EAAiC;AAC/B,MAAIC,WAAJ;;AACA,MAAID,KAAK,CAACE,IAAN,CAAWC,OAAf,EAAwB;AACtBF,IAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,MAAA,GAAG,EAAEV,QAAf;AAAyB,MAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAd;AACD,GAFD,MAEO;AACLU,IAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,MAAA,GAAG,EAAET,SAAf;AAA0B,MAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAd;AACD;;AAED,WAASY,SAAT,GAAqB;AACnBJ,IAAAA,KAAK,CAACK,YAAN,CAAmB,CAAC;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,SAAS,EAAEP,KAAK,CAACE,IAAN,CAAWM;AAAtC,KAAD,CAAnB;AACD;;AAED,QAAMC,UAAU,GAAG,CAAC,CAAD,CAAnB;AACAT,EAAAA,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC3B,QAAIA,IAAI,CAACC,OAAL,KAAiBb,KAAK,CAACE,IAAN,CAAWM,EAAhC,EAAoC;AAClCC,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiB,CAAjB;AACD;AACF,GAJD;AAMA,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAML,SAAS,EAApC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,WAAD;AAAA,kBAAcJ,KAAK,CAACE,IAAN,CAAWY;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,uDAAmCd,KAAK,CAACE,IAAN,CAAWa,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8Bf,KAAK,CAACE,IAAN,CAAWc;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAA,8BACE;AAAA,0FAAgBP,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,gCACE;AAAK,UAAA,OAAO,EAAGQ,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAE,MAAMlB,KAAK,CAACmB,eAAN,CAAsBnB,KAAK,CAACE,IAAN,CAAWM,EAAjC,CAA5B;AAAA,sBACGP;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,OAAO,EAAGgB,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAE,MAAMlB,KAAK,CAACoB,QAAN,CAAepB,KAAK,CAACE,IAAN,CAAWM,EAA1B,CAA5B;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,GAAG,EAAElB,SAAf;AAA0B,cAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;KA7CQS,K;AA8CT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport trashIcon from '../assets/img/trash.png';\nimport openIcon from '../assets/img/open.png';\nimport closeIcon from '../assets/img/close.png';\nimport { CardProps } from '../app/entity';\nimport {\n  CardWraper,\n  ButtonCards,\n  ImgCards,\n  ButtonWraper,\n  ThemeColumn,\n  FooterCard,\n} from './cardsStyling';\n\nfunction Cards(props: CardProps) {\n  let checedIcons: JSX.Element;\n  if (props.card.checked) {\n    checedIcons = <ImgCards src={openIcon} alt=\"checked\" />;\n  } else {\n    checedIcons = <ImgCards src={closeIcon} alt=\"checked\" />;\n  }\n\n  function openPopup() {\n    props.setPopupCard([{ status: true, cardIndex: props.card.id }]);\n  }\n\n  const colComment = [0];\n  props.comments.map((item) => {\n    if (item.idCards === props.card.id) {\n      colComment[0] += 1;\n    }\n  });\n\n  return (\n    <CardWraper onClick={() => openPopup()}>\n      <div className=\"card__info-wrapper\">\n        <ThemeColumn>{props.card.theme}</ThemeColumn>\n        <p className=\"card__autor\">Автор: {props.card.author}</p>\n        <div className=\"card__text-wrapper\">\n          <span className=\"card__text\">{props.card.text}</span>\n        </div>\n      </div>\n      <FooterCard>\n        <p>Комментарии:{colComment}</p>\n        <ButtonWraper>\n          <div onClick={(e) => e.stopPropagation()}>\n            <ButtonCards onClick={() => props.onToggleChecked(props.card.id)}>\n              {checedIcons}\n            </ButtonCards>\n          </div>\n          <div onClick={(e) => e.stopPropagation()}>\n            <ButtonCards onClick={() => props.onDelete(props.card.id)}>\n              <ImgCards src={trashIcon} alt=\"trash\" />\n            </ButtonCards>\n          </div>\n        </ButtonWraper>\n      </FooterCard>\n    </CardWraper>\n  );\n}\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}